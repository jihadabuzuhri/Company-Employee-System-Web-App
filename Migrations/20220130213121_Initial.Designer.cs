// <auto-generated />
using CompanyWebApp.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CompanyWebApp.Migrations
{
    [DbContext(typeof(CompanyContext))]
    [Migration("20220130213121_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CompanyWebApp.Models.Dept", b =>
                {
                    b.Property<int>("DeptID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Dname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LocID")
                        .HasColumnType("int");

                    b.HasKey("DeptID");

                    b.HasIndex("LocID");

                    b.ToTable("Dept");

                    b.HasData(
                        new
                        {
                            DeptID = 1,
                            Dname = "CSE",
                            LocID = 2
                        },
                        new
                        {
                            DeptID = 2,
                            Dname = "IT",
                            LocID = 1
                        });
                });

            modelBuilder.Entity("CompanyWebApp.Models.Emp", b =>
                {
                    b.Property<int>("EmpID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DeptID")
                        .HasColumnType("int");

                    b.Property<string>("Ename")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Job")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sal")
                        .HasColumnType("int");

                    b.HasKey("EmpID");

                    b.HasIndex("DeptID");

                    b.ToTable("Emp");

                    b.HasData(
                        new
                        {
                            EmpID = 1,
                            DeptID = 1,
                            Ename = "jihad",
                            Job = "Eng",
                            Sal = 2000
                        },
                        new
                        {
                            EmpID = 2,
                            DeptID = 2,
                            Ename = "Ali",
                            Job = "Eng",
                            Sal = 4000
                        });
                });

            modelBuilder.Entity("CompanyWebApp.Models.Loc", b =>
                {
                    b.Property<int>("LocID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LocID");

                    b.ToTable("Loc");

                    b.HasData(
                        new
                        {
                            LocID = 1,
                            City = "Nablus",
                            Street = "a1"
                        },
                        new
                        {
                            LocID = 2,
                            City = "jenin",
                            Street = "b3"
                        });
                });

            modelBuilder.Entity("CompanyWebApp.Models.Dept", b =>
                {
                    b.HasOne("CompanyWebApp.Models.Loc", "loc")
                        .WithMany()
                        .HasForeignKey("LocID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CompanyWebApp.Models.Emp", b =>
                {
                    b.HasOne("CompanyWebApp.Models.Dept", "dept")
                        .WithMany()
                        .HasForeignKey("DeptID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
